#!@SHELL_BINARY@
# quick look at current connections and related information
# Copyright (C) 1998, 1999  Henry Spencer.
# Copyright (C) 2012-2019 Paul Wouters <pwouters@redhat.com>
# Copyright (C) 2015 Tuomo Soini <tis@foobar.fi>
# Copyright (C) 2018-2019 Andrew Cagney <cagney@gnu.org>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See <https://www.gnu.org/licenses/gpl2.txt>.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#

LC_ALL=C
export LC_ALL

me="ipsec look"

case "$1" in
    --help)
	echo "Usage: ipsec look"
	exit 0
	;;
    --version)
	echo "$me $IPSEC_VERSION"
	exit 0
	;;
esac

# label it just to be sure
echo "$(hostname) $(date)"

# xfrm
if [ -f /proc/sys/net/core/xfrm_acq_expires ]; then
    echo "XFRM state:"
    ip xfrm state
    echo "XFRM policy:"
    # Force the order by feeding sort with lines prefixed by '[46]
    # TYPE PRIORITY |'.
    ip -o xfrm policy | {
	# clean up the input: drop socket lines; strip trailing white
	# space (either end of line or before \\); strip double \\s
	sed -e '/socket/d' \
	    -e 's/\s*\\/\\/g' \
	    -e 's/\\\\/\\/g' \
	    -e 's/[\\]*\s*$//g'
    } | {
	# Build the '<[46]> <type> <priority> |' prefix ready for
	# sorting.  For each field, start with the assumption that the
	# value is unknown (setting it to a default), and then adjust
	# it as necessary.  For instance, for the protocol, start out
	# assuming it is '4' (IPv4) and then if the line contains a
	# ':' switch the prefix to '6' (IPv6).
	sed -e 's/^/| /' \
	    \
	    -e 's/^/0 /' \
	    -e 's/^0 \(.* priority \([0-9][0-9]*\)\)/\2 \1/' \
	    \
	    -e 's/^/0 /' \
	    -e 's/^0 \(.*:.* type \([0-9][0-9]*\)\)/\2 \1/' \
	    \
	    -e 's/^/4 /' \
	    -e 's/^4 \(.*:\)/6 \1/'
    } | {
	# sort by each of the prefixes individually, and then by the
	# rest of the line.  Shorter forms like -n and -k1,3n don't do
	# what is wanted.  XXX: Should add 'V' so .24. is before
	# .200.?
	sort -b -k1,1n -k2,2n -k3,3n -k5
    } | {
	# strip the sort prefixes
	sed -e 's/^.* | //'
    } | {
	# convert \ into line breaks
	tr '\\' '\012'
    }
    echo "XFRM done"
fi

echo IPSEC mangle TABLES
if grep -q ^mangle /proc/net/ip_tables_names 2>/dev/null; then
    iptables -n -t mangle -L IPSEC
fi
if grep -q ^mangle /proc/net/ip6_tables_names 2>/dev/null; then
    ip6tables -n -t mangle -L IPSEC
fi

echo NEW_IPSEC_CONN mangle TABLES
if grep -q ^mangle /proc/net/ip_tables_names 2>/dev/null; then
	iptables -n -t mangle -L NEW_IPSEC_CONN
fi
if grep -q ^mangle /proc/net/ip6_tables_names 2>/dev/null; then
	ip6tables -n -t mangle -L NEW_IPSEC_CONN
fi

echo ROUTING TABLES
# The IP command includes extra and evoling white space
{
    ip -4 route
    ip -6 route
} | sed -e 's/  / /g' -e 's/ $//'

if [ -f @IPSEC_NSSDIR@/cert9.db ]; then
    echo NSS_CERTIFICATES
    certutil -L -d sql:@IPSEC_NSSDIR@ | head -4
    certutil -L -d sql:@IPSEC_NSSDIR@ | \
	grep -E -v '^NSS_CERTIFICATES|^$|Trust Attributes|MIME,' | LC_ALL=C sort
elif [ -f @IPSEC_NSSDIR@/cert8.db ]; then
    echo NSS_CERTIFICATES
    certutil -L -d @IPSEC_NSSDIR@ | head -4
    certutil -L -d @IPSEC_NSSDIR@ | \
	grep -E -v '^NSS_CERTIFICATES|^$|Trust Attributes|MIME,' | LC_ALL=C sort
fi
